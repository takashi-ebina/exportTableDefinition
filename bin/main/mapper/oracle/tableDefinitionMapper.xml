<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.export_table_definition.domain.repository.oracle.TableDefinitionRepository">

<select id="selectBaseInfo" resultType="BaseInfoDto">
SELECT SYS_CONTEXT('USERENV','DB_NAME') AS "dbName", '|' || 'Oracle' || '|' ||  SYS_CONTEXT('USERENV','DB_NAME') || '|' || to_char(current_timestamp, 'yyyy/MM/dd') || '|' AS "baseInfo" FROM dual fetch first 1 rows only
</select>

<select id="selectAllTableInfo" resultType="AllTableDto">
WITH ora_all_tables AS (
    SELECT 
        COALESCE(t1.OWNER, '') AS schema_name,
        'table' AS table_type,
        COALESCE(REGEXP_REPLACE(tcom.COMMENTS, '\r|\n|\r\n', ''), '') AS logical_table_name,
        COALESCE(t1.TABLE_NAME, '') AS physical_table_name,
        '' AS remarks,
        '[■](./' || SYS_CONTEXT('USERENV','DB_NAME') || '/' || t1.OWNER || '/table/' || t1.TABLE_NAME || '.md)' AS link,
        NULL AS definition
    FROM ALL_TABLES t1
    LEFT OUTER JOIN ALL_MVIEWS m
        ON t1.OWNER = m.OWNER
        AND t1.TABLE_NAME = m.MVIEW_NAME
    LEFT OUTER JOIN ALL_TAB_COMMENTS tcom
        ON t1.OWNER = tcom.OWNER
        AND t1.TABLE_NAME = tcom.TABLE_NAME
    WHERE 
        m.MVIEW_NAME IS NULL
    	AND t1.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND t1.OWNER  IN
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND t1.TABLE_NAME IN
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    
    UNION ALL

    SELECT 
        COALESCE(t2.OWNER, '') AS schema_name,
        'view' AS table_type,
        COALESCE(REGEXP_REPLACE(vcom.COMMENTS, '\r|\n|\r\n', ''), '') AS logical_table_name,
        COALESCE(t2.VIEW_NAME, '') AS physical_table_name,
        '' AS remarks,
        '[■](./' || SYS_CONTEXT('USERENV','DB_NAME') || '/' || t2.OWNER || '/view/' || t2.VIEW_NAME || '.md)' AS link,
        '-- Oracleは未対応 --' AS definition
    FROM ALL_VIEWS t2
    LEFT OUTER JOIN ALL_TAB_COMMENTS vcom
        ON t2.OWNER = vcom.OWNER
        AND t2.VIEW_NAME = vcom.TABLE_NAME
    WHERE
    t2.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND t2.OWNER IN
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND t2.VIEW_NAME IN
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    
    UNION ALL

    SELECT 
        COALESCE(t3.OWNER, '') AS schema_name,
        'materialized_view' AS table_type,
        COALESCE(REGEXP_REPLACE(mcom.COMMENTS, '\r|\n|\r\n', ''), '') AS logical_table_name,
        COALESCE(t3.MVIEW_NAME, '') AS physical_table_name,
        '' AS remarks,
        '[■](./' || SYS_CONTEXT('USERENV','DB_NAME') || '/' || t3.OWNER || '/materialized_view/' || t3.MVIEW_NAME || '.md)' AS link,
        '-- Oracleは未対応 --' AS definition
    FROM ALL_MVIEWS t3
    LEFT OUTER JOIN ALL_TAB_COMMENTS mcom
        ON t3.OWNER = mcom.OWNER
        AND t3.MVIEW_NAME = mcom.TABLE_NAME
    WHERE
        t3.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND t3.OWNER  IN
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND t3.MVIEW_NAME IN
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
)
SELECT 
    schema_name AS "schemaName",
    logical_table_name AS "logicalTableName",
    physical_table_name AS "physicalTableName",
    table_type AS "tableType",
    '|' || ROW_NUMBER() OVER (ORDER BY schema_name, physical_table_name) || '|' || schema_name || '|' || logical_table_name || '|' || physical_table_name || '|' || table_type || '|' || link || '|' || remarks || '|' AS "tableInfoList",
    '|' || schema_name || '|' || logical_table_name || '|' || physical_table_name || '|' || table_type || '|' || remarks || '|' AS "tableInfo",
    definition AS definition
FROM ora_all_tables
ORDER BY 
    schema_name, physical_table_name

</select>

<select id="selectAllColumnInfo" resultType="AllColumnDto">

WITH ora_all_columns AS (
    SELECT
        c.OWNER AS schema_name,
        c.TABLE_NAME AS table_name,
        c.COLUMN_ID AS column_num,
        <![CDATA[
        CASE WHEN regexp_instr(com.COMMENTS, '[(（]') < 1 THEN com.COMMENTS
             ELSE coalesce(substr(com.COMMENTS, 1, regexp_instr(com.COMMENTS, '[(（]') - 1), '') 
        END AS logical_column_name,
        ]]>
        c.COLUMN_NAME AS physical_column_name,
        c.DATA_TYPE || CASE WHEN c.DATA_TYPE IN ('VARCHAR2', 'CHAR', 'NVARCHAR2', 'NCHAR') 
                            THEN '(' || c.DATA_LENGTH || ')' 
                            WHEN c.DATA_TYPE IN ('NUMBER') 
                            THEN '(' || c.DATA_PRECISION || ',' || DATA_SCALE || ')' 
                            WHEN c.DATA_TYPE IN ('FLOAT') 
                            THEN '(' || c.DATA_PRECISION || ')' 
                            ELSE '' 
                       END AS column_type,
        CASE WHEN EXISTS (
            SELECT 1
            FROM ALL_CONS_COLUMNS acc
            JOIN ALL_CONSTRAINTS ac
            ON acc.CONSTRAINT_NAME = ac.CONSTRAINT_NAME
            WHERE acc.TABLE_NAME = c.TABLE_NAME
            AND acc.COLUMN_NAME = c.COLUMN_NAME
            AND ac.CONSTRAINT_TYPE = 'P'
        ) THEN '○' ELSE '' END AS primary_key,
        CASE c.NULLABLE
            WHEN 'N' THEN '○'
            ELSE ''
        END AS not_null,
        ' ' AS default_value,
        <![CDATA[
        CASE WHEN regexp_instr(com.COMMENTS, '[(（]') < 1 then ''
             ELSE regexp_replace(coalesce(substr(com.COMMENTS, regexp_instr(com.COMMENTS, '[(（]') + 1), ''), '[）)]$', '')
        END AS remarks
        ]]>
    FROM
        ALL_TAB_COLUMNS c
    LEFT OUTER JOIN
        ALL_COL_COMMENTS com
    ON
        c.OWNER = com.OWNER
        AND c.TABLE_NAME = com.TABLE_NAME
        AND c.COLUMN_NAME = com.COLUMN_NAME
    WHERE
        c.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND c.OWNER IN
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND c.TABLE_NAME IN
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    ORDER BY
        c.OWNER, c.TABLE_NAME, c.COLUMN_ID
)
SELECT
    schema_name AS "schemaName",
    table_name AS "tableName",
    '|' || column_num || '|' || logical_column_name || '|' || physical_column_name || '|' || column_type || '|' || primary_key || '|' || not_null || '|' || default_value || '|' || remarks || '|' AS "columnInfo"
FROM
    ora_all_columns
ORDER BY
    schema_name, table_name, column_num

</select>

<select id="selectAllIndexInfo" resultType="AllIndexDto">
WITH ora_all_indexes AS (
    SELECT
        idx.owner AS schema_name,
        idx.table_name AS table_name,
        idx.index_name AS index_name,
        LISTAGG(col.column_name, ',') WITHIN GROUP (ORDER BY col.column_position) AS column_names
    FROM
        all_indexes idx
    LEFT JOIN
        all_ind_columns col ON idx.index_name = col.index_name
        AND idx.owner = col.index_owner
    WHERE
        idx.uniqueness = 'NONUNIQUE'
        AND idx.index_type != 'LOB'
        AND idx.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND idx.owner IN
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND idx.table_name IN
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    GROUP BY
        idx.owner, idx.table_name, idx.index_name
)
SELECT
    schema_name AS "schemaName",
    table_name AS "tableName",
    CASE WHEN index_name IS NOT NULL THEN
        '|' || ROW_NUMBER() OVER (PARTITION BY schema_name, table_name ORDER BY index_name) || '|' || index_name || '|' || column_names || '|'
    ELSE NULL END AS "indexInfo"
FROM
    ora_all_indexes
ORDER BY
    schema_name, table_name
</select>


<select id="selectAllConstraintInfo" resultType="AllConstraintDto">
WITH ora_all_constraints AS (
    SELECT
        ac.owner AS schema_name,
        ac.table_name AS table_name,
        ac.constraint_name AS constraints_name,
        CASE ac.constraint_type
            WHEN 'C' THEN 'CHECK'
            WHEN 'R' THEN 'FOREIGN KEY'
            WHEN 'P' THEN 'PRIMARY KEY'
            WHEN 'U' THEN 'UNIQUE'
            ELSE NULL
        END AS constraints_type,
        CASE ac.constraint_type
            WHEN 'P' THEN 'PRIMARY KEY (' || LISTAGG(acc.column_name, ',') WITHIN GROUP (ORDER BY acc.position) || ')'
            ELSE NULL
        END AS constraints_definition
    FROM
        all_constraints ac
    LEFT OUTER JOIN
        all_cons_columns acc ON ac.constraint_name = acc.constraint_name
        AND ac.owner = acc.owner
    WHERE
        ac.constraint_type IN ('P')
        AND ac.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND ac.owner IN 
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND ac.table_name IN 
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    GROUP BY 
        ac.owner, ac.table_name, ac.constraint_name, ac.constraint_type
        
    UNION ALL 
    
    SELECT
        ac.owner AS schema_name,
        ac.table_name AS table_name,
        ac.constraint_name AS constraints_name,
        CASE ac.constraint_type
            WHEN 'C' THEN 'CHECK'
            WHEN 'R' THEN 'FOREIGN KEY'
            WHEN 'U' THEN 'UNIQUE'
            ELSE NULL
        END AS constraints_type,
        CASE ac.constraint_type
            WHEN 'C' THEN ' '
            WHEN 'R' THEN 'FOREIGN KEY (' || acc.column_name || ') REFERENCES' || ac_r.table_name || '(' || acc_r.column_name || ')'
            WHEN 'U' THEN 'UNIQUE ('|| acc.column_name || ')'
            ELSE NULL
        END AS constraints_definition
    FROM
        all_constraints ac
    LEFT OUTER JOIN
        all_cons_columns acc ON ac.constraint_name = acc.constraint_name
        AND ac.owner = acc.owner
    LEFT OUTER JOIN 
        all_constraints ac_r ON ac.r_constraint_name = ac_r.constraint_name
        AND ac.r_owner = ac_r.owner
    LEFT OUTER JOIN 
        all_cons_columns acc_r ON ac_r.constraint_name = acc_r.constraint_name
        AND ac_r.owner = acc_r.owner
        AND acc.position = acc_r.position
    WHERE
        ac.constraint_type IN ('C', 'R', 'U')
        AND ac.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND ac.owner IN 
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND ac.table_name IN 
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
)
SELECT
    schema_name AS "schemaName",
    table_name AS "tableName",
    constraints_definition,
    '|' || ROW_NUMBER() OVER (PARTITION BY schema_name, table_name ORDER BY constraints_type, constraints_name) ||
    '|' || constraints_name || '|' || constraints_type || '|' || constraints_definition || '|' AS "constraintInfo"
FROM
    ora_all_constraints
ORDER BY
    schema_name, table_name, constraints_type, constraints_name
    
</select>

<select id="selectAllForeignkeyInfo" resultType="AllForeignkeyDto">
WITH ora_all_foreignkeys AS (
    SELECT 
        ac.constraint_name AS foreignkey_name,
        ac.owner AS schema_name,
        ac.table_name AS table_name,
        LISTAGG(acc.column_name, ',') WITHIN GROUP (ORDER BY acc.position) AS column_names,
        ac_r.owner AS reference_schema_name,
        ac_r.table_name AS reference_table_name,
        LISTAGG(acc_r.column_name, ',') WITHIN GROUP (ORDER BY acc_r.position) AS reference_column_names
    FROM 
        all_constraints ac
    LEFT OUTER JOIN 
        all_cons_columns acc ON ac.constraint_name = acc.constraint_name
        AND ac.owner = acc.owner
        AND ac.constraint_type = 'R' 
    LEFT OUTER JOIN 
        all_constraints ac_r ON ac.r_constraint_name = ac_r.constraint_name
        AND ac.r_owner = ac_r.owner
    LEFT OUTER JOIN 
        all_cons_columns acc_r ON ac_r.constraint_name = acc_r.constraint_name
        AND ac_r.owner = acc_r.owner
        AND acc.position = acc_r.position
    WHERE 
        ac.OWNER NOT IN ('ANONYMOUS','APPQOSSYS','AUDSYS','CTXSYS','DBSFWUSER','DBSNMP','DGPDB_INT','DIP','DVF','DVSYS','GGSYS','GSMADMIN_INTERNAL','GSMCATUSER','GSMUSER','LBACSYS','MDDATA','MDSYS','OJVMSYS','OLAPSYS','ORACLEUSER','ORACLE_OCM','ORDDATA','ORDPLUGINS','OUTLN','PDBADMIN','REMOTE_SCHEDULER_AGENT','SI_INFORMTN_SCHEMA','SYS','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','SYSTEM','WMSYS','XDB','XS$NULL','ORDSYS')
        <if test="schemaList != null and schemaList.size() > 0">
            AND ac.owner IN 
            <foreach item="schema" index="index" collection="schemaList"
                open="(" separator="," close=")">
                #{schema}
            </foreach>
        </if>
        <if test="tableList != null and tableList.size() > 0">
            AND ac.table_name IN 
            <foreach item="table" index="index" collection="tableList"
                open="(" separator="," close=")">
                #{table}
            </foreach>
        </if>
    GROUP BY 
        ac.constraint_name, ac.owner, ac.table_name, ac_r.owner, ac_r.table_name
    ORDER BY 
        ac.constraint_name, ac.owner, ac.table_name, ac_r.owner, ac_r.table_name
)
SELECT 
    schema_name AS "schemaName",
    table_name AS "tableName",
    CASE WHEN foreignkey_name IS NOT NULL THEN
        '|' || ROW_NUMBER() OVER (PARTITION BY schema_name, table_name ORDER BY foreignkey_name) ||
        '|' || foreignkey_name || '|' || column_names || '|' || reference_schema_name || '.' || reference_table_name || '|' || reference_column_names || '|'
    ELSE NULL END AS "foreignkeyInfo"
FROM 
    ora_all_foreignkeys
WHERE
    column_names IS NOT NULL
ORDER BY 
    schema_name, table_name
</select>

</mapper>